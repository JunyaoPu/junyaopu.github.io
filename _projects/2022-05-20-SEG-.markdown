---
layout: single
title:  "Real-time AI Vision System (2): Semantic Segmentation."
date:   2022-05-20 00:43:00 -0500
collection: projects
author_profile: true
toc: true
classes: wide
header:
    teaser: /assets/images/project_SEG/SEG.png
---
I trained a Unet model on the PASCAL VOC Dataset (2012) using an AWS EC2 cloud server for my project. After that, I deployed the segmentation model on an NVIDIA Jetson AGX Xavier hardware using ROS2 C/C++ and TensorRT C/C++. The deployed model is capable of processing input RGB images from a Logitech webcam at a speed of 55 frames per second.

# The PASCAL VOC Dataset
The PASCAL VOC (Visual Object Classes) dataset also includes annotations for semantic segmentation. Semantic segmentation is the task of labeling every pixel in an image with a corresponding class label, such as "person," "car," or "background."
Here are total 21 classes including the background in the PASCAL VOC Dataset (2012).
```
VOC_CLASSES = [
    "background",
    "aeroplane",
    "bicycle",
    "bird",
    "boat",
    "bottle",
    "bus",
    "car",
    "cat",
    "chair",
    "cow",
    "diningtable",
    "dog",
    "horse",
    "motorbike",
    "person",
    "potted plant",
    "sheep",
    "sofa",
    "train",
    "tv/monitor",
]
```

And some sample input images and segmentation masks from the PASCAL VOC Dataset (2012).
<style>
.center {
  display: block;
  margin-left: auto;
  margin-right: auto;
  min-width: 90%;
  max-width: 90%;
  width: 50vw;
}
</style>
<img class="center" src="/assets/images/project_SEG/VOC_sampels.png" alt="VOC_sampels."> 

# The Training Result
The segmentation model was trained on an AWS EC2 cloud server using PyTorch and 2 GPUs. The dataset was split into 70% for training, 20% for validation, and 10% for testing. The training was stopped at the maximum number of epochs set to 200.

Here are some examples of the model's inference results, and they look very good.

# Setup
- AWS access for EC2 (p3.2xlarge)

- NVIDIA Jetson AGX Xavier (JetPack 4.5)

- ROS2 installed (Eloquent)

- Logitech C920 Webcam HD Pro

- A monitor 

# Workflow
The training phase was executed on an AWS EC2 cloud server utilizing PyTorch/Python. An Onnx file was utilized as a connector to transfer the trained model to the deployment hardware. The deployment phase was performed on an NVIDIA Jetson AGX Xavier using ROS2 C/C++ and TensorRT C/C++, as the C/C++ programming language was selected for its exceptional speed for input pre-processing and output post-processing.

<style>
.center {
  display: block;
  margin-left: auto;
  margin-right: auto;
  min-width: 90%;
  max-width: 90%;
  width: 50vw;
}
</style>
<img class="center" src="/assets/images/project_OD/Task_1.png" alt="The task."> 


# Demo

